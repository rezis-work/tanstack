/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as IndexImport } from './routes/index'
import { Route as PokemonsIndexImport } from './routes/pokemons/index'
import { Route as PokemonsIdImport } from './routes/pokemons/$id'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PokemonsIndexRoute = PokemonsIndexImport.update({
  id: '/pokemons/',
  path: '/pokemons/',
  getParentRoute: () => rootRoute,
} as any)

const PokemonsIdRoute = PokemonsIdImport.update({
  id: '/pokemons/$id',
  path: '/pokemons/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/pokemons/$id': {
      id: '/pokemons/$id'
      path: '/pokemons/$id'
      fullPath: '/pokemons/$id'
      preLoaderRoute: typeof PokemonsIdImport
      parentRoute: typeof rootRoute
    }
    '/pokemons/': {
      id: '/pokemons/'
      path: '/pokemons'
      fullPath: '/pokemons'
      preLoaderRoute: typeof PokemonsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/pokemons/$id': typeof PokemonsIdRoute
  '/pokemons': typeof PokemonsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/pokemons/$id': typeof PokemonsIdRoute
  '/pokemons': typeof PokemonsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/pokemons/$id': typeof PokemonsIdRoute
  '/pokemons/': typeof PokemonsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/profile' | '/pokemons/$id' | '/pokemons'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/profile' | '/pokemons/$id' | '/pokemons'
  id: '__root__' | '/' | '/profile' | '/pokemons/$id' | '/pokemons/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  PokemonsIdRoute: typeof PokemonsIdRoute
  PokemonsIndexRoute: typeof PokemonsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  PokemonsIdRoute: PokemonsIdRoute,
  PokemonsIndexRoute: PokemonsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/profile",
        "/pokemons/$id",
        "/pokemons/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/pokemons/$id": {
      "filePath": "pokemons/$id.tsx"
    },
    "/pokemons/": {
      "filePath": "pokemons/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
